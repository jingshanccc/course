// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: course/course-srv/proto/dto/course.proto

package dto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//Course Dto
type CourseDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	// id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//
	// 概述
	Summary string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	//
	// 时长|单位秒
	Time int32 `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	//
	// 价格（元）
	Price float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	//
	// 封面
	Image string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	//
	// 级别|枚举[CourseLevelEnum]：ONE("1", "初级"),TWO("2", "中级"),THREE("3", "高级")
	Level string `protobuf:"bytes,7,opt,name=level,proto3" json:"level,omitempty"`
	//
	// 收费|枚举[CourseChargeEnum]：CHARGE("C", "收费"),FREE("F", "免费")
	Charge string `protobuf:"bytes,8,opt,name=charge,proto3" json:"charge,omitempty"`
	//
	// 状态|枚举[CourseStatusEnum]：PUBLISH("P", "发布"),DRAFT("D", "草稿")
	Status string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	//
	// 报名数
	Enroll int32 `protobuf:"varint,10,opt,name=enroll,proto3" json:"enroll,omitempty"`
	//
	// 顺序
	Sort int32 `protobuf:"varint,11,opt,name=sort,proto3" json:"sort,omitempty"`
	//
	// 创建时间
	CreatedAt string `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//
	// 修改时间
	UpdatedAt  string        `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Categories []string      `protobuf:"bytes,14,rep,name=categories,proto3" json:"categories,omitempty"`
	Chapters   []*ChapterDto `protobuf:"bytes,15,rep,name=chapters,proto3" json:"chapters,omitempty"`
	Sections   []*SectionDto `protobuf:"bytes,16,rep,name=sections,proto3" json:"sections,omitempty"`
	Content    string        `protobuf:"bytes,17,opt,name=content,proto3" json:"content,omitempty"`
	Teacher    *TeacherDto   `protobuf:"bytes,18,opt,name=teacher,proto3" json:"teacher,omitempty"`
	//
	// 讲师|teacher.id
	TeacherId string `protobuf:"bytes,19,opt,name=teacherId,proto3" json:"teacherId,omitempty"`
}

func (x *CourseDto) Reset() {
	*x = CourseDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseDto) ProtoMessage() {}

func (x *CourseDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseDto.ProtoReflect.Descriptor instead.
func (*CourseDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{0}
}

func (x *CourseDto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CourseDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CourseDto) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *CourseDto) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *CourseDto) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CourseDto) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CourseDto) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *CourseDto) GetCharge() string {
	if x != nil {
		return x.Charge
	}
	return ""
}

func (x *CourseDto) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CourseDto) GetEnroll() int32 {
	if x != nil {
		return x.Enroll
	}
	return 0
}

func (x *CourseDto) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *CourseDto) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CourseDto) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CourseDto) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *CourseDto) GetChapters() []*ChapterDto {
	if x != nil {
		return x.Chapters
	}
	return nil
}

func (x *CourseDto) GetSections() []*SectionDto {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *CourseDto) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CourseDto) GetTeacher() *TeacherDto {
	if x != nil {
		return x.Teacher
	}
	return nil
}

func (x *CourseDto) GetTeacherId() string {
	if x != nil {
		return x.TeacherId
	}
	return ""
}

type CoursePageDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64        `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size       int64        `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Sort       []string     `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	Blurry     string       `protobuf:"bytes,4,opt,name=blurry,proto3" json:"blurry,omitempty"`
	Total      int64        `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	CreateTime []string     `protobuf:"bytes,6,rep,name=createTime,proto3" json:"createTime,omitempty"`
	Rows       []*CourseDto `protobuf:"bytes,7,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *CoursePageDto) Reset() {
	*x = CoursePageDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoursePageDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoursePageDto) ProtoMessage() {}

func (x *CoursePageDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoursePageDto.ProtoReflect.Descriptor instead.
func (*CoursePageDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{1}
}

func (x *CoursePageDto) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CoursePageDto) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CoursePageDto) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *CoursePageDto) GetBlurry() string {
	if x != nil {
		return x.Blurry
	}
	return ""
}

func (x *CoursePageDto) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CoursePageDto) GetCreateTime() []string {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *CoursePageDto) GetRows() []*CourseDto {
	if x != nil {
		return x.Rows
	}
	return nil
}

type CourseDtoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*CourseDto `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *CourseDtoList) Reset() {
	*x = CourseDtoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseDtoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseDtoList) ProtoMessage() {}

func (x *CourseDtoList) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseDtoList.ProtoReflect.Descriptor instead.
func (*CourseDtoList) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{2}
}

func (x *CourseDtoList) GetRows() []*CourseDto {
	if x != nil {
		return x.Rows
	}
	return nil
}

type CourseContentDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`           //课程ID
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"` //课程内容
}

func (x *CourseContentDto) Reset() {
	*x = CourseContentDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseContentDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseContentDto) ProtoMessage() {}

func (x *CourseContentDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseContentDto.ProtoReflect.Descriptor instead.
func (*CourseContentDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{3}
}

func (x *CourseContentDto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CourseContentDto) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CourseCategoryDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CourseId   string `protobuf:"bytes,2,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	CategoryId string `protobuf:"bytes,3,opt,name=CategoryId,proto3" json:"CategoryId,omitempty"`
}

func (x *CourseCategoryDto) Reset() {
	*x = CourseCategoryDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseCategoryDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseCategoryDto) ProtoMessage() {}

func (x *CourseCategoryDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseCategoryDto.ProtoReflect.Descriptor instead.
func (*CourseCategoryDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{4}
}

func (x *CourseCategoryDto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CourseCategoryDto) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *CourseCategoryDto) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

type CourseCategoryDtoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*CourseCategoryDto `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *CourseCategoryDtoList) Reset() {
	*x = CourseCategoryDtoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseCategoryDtoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseCategoryDtoList) ProtoMessage() {}

func (x *CourseCategoryDtoList) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseCategoryDtoList.ProtoReflect.Descriptor instead.
func (*CourseCategoryDtoList) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{5}
}

func (x *CourseCategoryDtoList) GetRows() []*CourseCategoryDto {
	if x != nil {
		return x.Rows
	}
	return nil
}

type CategoryDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Parent string `protobuf:"bytes,3,opt,name=parent,proto3" json:"parent,omitempty"`
	Sort   int32  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *CategoryDto) Reset() {
	*x = CategoryDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryDto) ProtoMessage() {}

func (x *CategoryDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryDto.ProtoReflect.Descriptor instead.
func (*CategoryDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{6}
}

func (x *CategoryDto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CategoryDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryDto) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CategoryDto) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type CategoryPageDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64          `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size   int64          `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Sort   []string       `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	Blurry string         `protobuf:"bytes,4,opt,name=blurry,proto3" json:"blurry,omitempty"`
	Total  int64          `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	Parent string         `protobuf:"bytes,6,opt,name=parent,proto3" json:"parent,omitempty"`
	Rows   []*CategoryDto `protobuf:"bytes,7,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *CategoryPageDto) Reset() {
	*x = CategoryPageDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryPageDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryPageDto) ProtoMessage() {}

func (x *CategoryPageDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryPageDto.ProtoReflect.Descriptor instead.
func (*CategoryPageDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{7}
}

func (x *CategoryPageDto) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CategoryPageDto) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CategoryPageDto) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *CategoryPageDto) GetBlurry() string {
	if x != nil {
		return x.Blurry
	}
	return ""
}

func (x *CategoryPageDto) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CategoryPageDto) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CategoryPageDto) GetRows() []*CategoryDto {
	if x != nil {
		return x.Rows
	}
	return nil
}

type CategoryDtoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*CategoryDto `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *CategoryDtoList) Reset() {
	*x = CategoryDtoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryDtoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryDtoList) ProtoMessage() {}

func (x *CategoryDtoList) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryDtoList.ProtoReflect.Descriptor instead.
func (*CategoryDtoList) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{8}
}

func (x *CategoryDtoList) GetRows() []*CategoryDto {
	if x != nil {
		return x.Rows
	}
	return nil
}

//Chapter Dto
type ChapterDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CourseId string `protobuf:"bytes,2,opt,name=courseId,proto3" json:"courseId,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Sort     int32  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *ChapterDto) Reset() {
	*x = ChapterDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterDto) ProtoMessage() {}

func (x *ChapterDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterDto.ProtoReflect.Descriptor instead.
func (*ChapterDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{9}
}

func (x *ChapterDto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChapterDto) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *ChapterDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChapterDto) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type ChapterDtoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*ChapterDto `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *ChapterDtoList) Reset() {
	*x = ChapterDtoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterDtoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterDtoList) ProtoMessage() {}

func (x *ChapterDtoList) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterDtoList.ProtoReflect.Descriptor instead.
func (*ChapterDtoList) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{10}
}

func (x *ChapterDtoList) GetRows() []*ChapterDto {
	if x != nil {
		return x.Rows
	}
	return nil
}

type ChapterPageDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64         `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size       int64         `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Sort       []string      `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	Blurry     string        `protobuf:"bytes,4,opt,name=blurry,proto3" json:"blurry,omitempty"`
	Total      int64         `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	CreateTime []string      `protobuf:"bytes,6,rep,name=createTime,proto3" json:"createTime,omitempty"`
	CourseId   string        `protobuf:"bytes,7,opt,name=courseId,proto3" json:"courseId,omitempty"`
	Rows       []*ChapterDto `protobuf:"bytes,8,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *ChapterPageDto) Reset() {
	*x = ChapterPageDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterPageDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterPageDto) ProtoMessage() {}

func (x *ChapterPageDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterPageDto.ProtoReflect.Descriptor instead.
func (*ChapterPageDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{11}
}

func (x *ChapterPageDto) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ChapterPageDto) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ChapterPageDto) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ChapterPageDto) GetBlurry() string {
	if x != nil {
		return x.Blurry
	}
	return ""
}

func (x *ChapterPageDto) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ChapterPageDto) GetCreateTime() []string {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ChapterPageDto) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *ChapterPageDto) GetRows() []*ChapterDto {
	if x != nil {
		return x.Rows
	}
	return nil
}

//Section Dto
type SectionDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	// id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	//
	// 课程|course.id
	CourseId string `protobuf:"bytes,3,opt,name=courseId,proto3" json:"courseId,omitempty"`
	//
	// 大章|chapter.id
	ChapterId string `protobuf:"bytes,4,opt,name=chapterId,proto3" json:"chapterId,omitempty"`
	//
	// 视频
	Video string `protobuf:"bytes,5,opt,name=video,proto3" json:"video,omitempty"`
	//
	// 时长|单位秒
	Time int32 `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`
	//
	// 收费
	Charge string `protobuf:"bytes,7,opt,name=charge,proto3" json:"charge,omitempty"`
	//
	// 顺序
	Sort int32 `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`
	//
	// 创建时间
	CreatedTime string `protobuf:"bytes,9,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	//
	// 修改时间
	UpdatedTime string `protobuf:"bytes,10,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
}

func (x *SectionDto) Reset() {
	*x = SectionDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectionDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionDto) ProtoMessage() {}

func (x *SectionDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionDto.ProtoReflect.Descriptor instead.
func (*SectionDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{12}
}

func (x *SectionDto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SectionDto) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SectionDto) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *SectionDto) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *SectionDto) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *SectionDto) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SectionDto) GetCharge() string {
	if x != nil {
		return x.Charge
	}
	return ""
}

func (x *SectionDto) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SectionDto) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *SectionDto) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

type SectionPageDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64         `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size       int64         `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Sort       []string      `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	Blurry     string        `protobuf:"bytes,4,opt,name=blurry,proto3" json:"blurry,omitempty"`
	Total      int64         `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	CreateTime []string      `protobuf:"bytes,6,rep,name=createTime,proto3" json:"createTime,omitempty"`
	CourseId   string        `protobuf:"bytes,7,opt,name=courseId,proto3" json:"courseId,omitempty"`
	ChapterId  string        `protobuf:"bytes,8,opt,name=chapterId,proto3" json:"chapterId,omitempty"`
	Rows       []*SectionDto `protobuf:"bytes,9,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *SectionPageDto) Reset() {
	*x = SectionPageDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectionPageDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionPageDto) ProtoMessage() {}

func (x *SectionPageDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionPageDto.ProtoReflect.Descriptor instead.
func (*SectionPageDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{13}
}

func (x *SectionPageDto) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SectionPageDto) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SectionPageDto) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *SectionPageDto) GetBlurry() string {
	if x != nil {
		return x.Blurry
	}
	return ""
}

func (x *SectionPageDto) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SectionPageDto) GetCreateTime() []string {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *SectionPageDto) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *SectionPageDto) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *SectionPageDto) GetRows() []*SectionDto {
	if x != nil {
		return x.Rows
	}
	return nil
}

//Teacher Dto
type TeacherDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	// id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//
	// 姓名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//
	// 头像
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	//
	// 职位
	Position string `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	//
	// 简介
	Intro string `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`
}

func (x *TeacherDto) Reset() {
	*x = TeacherDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherDto) ProtoMessage() {}

func (x *TeacherDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherDto.ProtoReflect.Descriptor instead.
func (*TeacherDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{14}
}

func (x *TeacherDto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeacherDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeacherDto) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *TeacherDto) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *TeacherDto) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

type TeacherPageDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64         `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size   int64         `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Sort   []string      `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	Blurry string        `protobuf:"bytes,4,opt,name=blurry,proto3" json:"blurry,omitempty"`
	Total  int64         `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	Rows   []*TeacherDto `protobuf:"bytes,6,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *TeacherPageDto) Reset() {
	*x = TeacherPageDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherPageDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherPageDto) ProtoMessage() {}

func (x *TeacherPageDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherPageDto.ProtoReflect.Descriptor instead.
func (*TeacherPageDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{15}
}

func (x *TeacherPageDto) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TeacherPageDto) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TeacherPageDto) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *TeacherPageDto) GetBlurry() string {
	if x != nil {
		return x.Blurry
	}
	return ""
}

func (x *TeacherPageDto) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TeacherPageDto) GetRows() []*TeacherDto {
	if x != nil {
		return x.Rows
	}
	return nil
}

type TeacherDtoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*TeacherDto `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *TeacherDtoList) Reset() {
	*x = TeacherDtoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherDtoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherDtoList) ProtoMessage() {}

func (x *TeacherDtoList) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherDtoList.ProtoReflect.Descriptor instead.
func (*TeacherDtoList) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{16}
}

func (x *TeacherDtoList) GetRows() []*TeacherDto {
	if x != nil {
		return x.Rows
	}
	return nil
}

//CourseFileDto
type CourseFileDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//*
	// id
	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	//*
	// 课程id
	CourseId string `protobuf:"bytes,2,opt,name=CourseId,proto3" json:"CourseId,omitempty"`
	//*
	// 地址
	Url string `protobuf:"bytes,3,opt,name=Url,proto3" json:"Url,omitempty"`
	//*
	// 文件名
	Name string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	//*
	// 大小|字节b
	Size int32 `protobuf:"varint,5,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *CourseFileDto) Reset() {
	*x = CourseFileDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseFileDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseFileDto) ProtoMessage() {}

func (x *CourseFileDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseFileDto.ProtoReflect.Descriptor instead.
func (*CourseFileDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{17}
}

func (x *CourseFileDto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CourseFileDto) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *CourseFileDto) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CourseFileDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CourseFileDto) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CourseFileDtoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*CourseFileDto `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *CourseFileDtoList) Reset() {
	*x = CourseFileDtoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseFileDtoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseFileDtoList) ProtoMessage() {}

func (x *CourseFileDtoList) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseFileDtoList.ProtoReflect.Descriptor instead.
func (*CourseFileDtoList) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{18}
}

func (x *CourseFileDtoList) GetRows() []*CourseFileDto {
	if x != nil {
		return x.Rows
	}
	return nil
}

//修改排序使用
type SortDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	OldSort int32  `protobuf:"varint,2,opt,name=OldSort,proto3" json:"OldSort,omitempty"`
	NewSort int32  `protobuf:"varint,3,opt,name=NewSort,proto3" json:"NewSort,omitempty"`
}

func (x *SortDto) Reset() {
	*x = SortDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortDto) ProtoMessage() {}

func (x *SortDto) ProtoReflect() protoreflect.Message {
	mi := &file_course_course_srv_proto_dto_course_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortDto.ProtoReflect.Descriptor instead.
func (*SortDto) Descriptor() ([]byte, []int) {
	return file_course_course_srv_proto_dto_course_proto_rawDescGZIP(), []int{19}
}

func (x *SortDto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SortDto) GetOldSort() int32 {
	if x != nil {
		return x.OldSort
	}
	return 0
}

func (x *SortDto) GetNewSort() int32 {
	if x != nil {
		return x.NewSort
	}
	return 0
}

var File_course_course_srv_proto_dto_course_proto protoreflect.FileDescriptor

var file_course_course_srv_proto_dto_course_proto_rawDesc = []byte{
	0x0a, 0x28, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2d,
	0x73, 0x72, 0x76, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x22, 0x9d, 0x04, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x74, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x44,
	0x74, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x08,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x74, 0x6f, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x07, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x44, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x75, 0x72, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x6c, 0x75, 0x72, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x52,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x36, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44,
	0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x3c, 0x0a,
	0x10, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x74,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x11, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x74, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x15,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x74,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x74, 0x6f, 0x52, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x22, 0x5d, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x50, 0x61, 0x67, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x75, 0x72, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6c, 0x75, 0x72, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x22, 0x3a, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x74,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x60,
	0x0a, 0x0a, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x22, 0x38, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x0e, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x75,
	0x72, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6c, 0x75, 0x72, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x86, 0x02, 0x0a, 0x0a,
	0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x67, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x75, 0x72, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6c, 0x75, 0x72, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x22, 0x78, 0x0a, 0x0a, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x44, 0x74,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x22, 0xa2, 0x01,
	0x0a, 0x0e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x44, 0x74, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x6c, 0x75, 0x72, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6c,
	0x75, 0x72, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x22, 0x38, 0x0a, 0x0e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x44, 0x74, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x75, 0x0a, 0x0d,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x3e, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x22, 0x4d, 0x0a, 0x07, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x74, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x4f, 0x6c, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x4f, 0x6c, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x53,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x4e, 0x65, 0x77, 0x53, 0x6f,
	0x72, 0x74, 0x42, 0x1d, 0x5a, 0x1b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x2d, 0x73, 0x72, 0x76, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_course_course_srv_proto_dto_course_proto_rawDescOnce sync.Once
	file_course_course_srv_proto_dto_course_proto_rawDescData = file_course_course_srv_proto_dto_course_proto_rawDesc
)

func file_course_course_srv_proto_dto_course_proto_rawDescGZIP() []byte {
	file_course_course_srv_proto_dto_course_proto_rawDescOnce.Do(func() {
		file_course_course_srv_proto_dto_course_proto_rawDescData = protoimpl.X.CompressGZIP(file_course_course_srv_proto_dto_course_proto_rawDescData)
	})
	return file_course_course_srv_proto_dto_course_proto_rawDescData
}

var file_course_course_srv_proto_dto_course_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_course_course_srv_proto_dto_course_proto_goTypes = []interface{}{
	(*CourseDto)(nil),             // 0: course.CourseDto
	(*CoursePageDto)(nil),         // 1: course.CoursePageDto
	(*CourseDtoList)(nil),         // 2: course.CourseDtoList
	(*CourseContentDto)(nil),      // 3: course.CourseContentDto
	(*CourseCategoryDto)(nil),     // 4: course.CourseCategoryDto
	(*CourseCategoryDtoList)(nil), // 5: course.CourseCategoryDtoList
	(*CategoryDto)(nil),           // 6: course.CategoryDto
	(*CategoryPageDto)(nil),       // 7: course.CategoryPageDto
	(*CategoryDtoList)(nil),       // 8: course.CategoryDtoList
	(*ChapterDto)(nil),            // 9: course.ChapterDto
	(*ChapterDtoList)(nil),        // 10: course.ChapterDtoList
	(*ChapterPageDto)(nil),        // 11: course.ChapterPageDto
	(*SectionDto)(nil),            // 12: course.SectionDto
	(*SectionPageDto)(nil),        // 13: course.SectionPageDto
	(*TeacherDto)(nil),            // 14: course.TeacherDto
	(*TeacherPageDto)(nil),        // 15: course.TeacherPageDto
	(*TeacherDtoList)(nil),        // 16: course.TeacherDtoList
	(*CourseFileDto)(nil),         // 17: course.CourseFileDto
	(*CourseFileDtoList)(nil),     // 18: course.CourseFileDtoList
	(*SortDto)(nil),               // 19: course.SortDto
}
var file_course_course_srv_proto_dto_course_proto_depIdxs = []int32{
	9,  // 0: course.CourseDto.chapters:type_name -> course.ChapterDto
	12, // 1: course.CourseDto.sections:type_name -> course.SectionDto
	14, // 2: course.CourseDto.teacher:type_name -> course.TeacherDto
	0,  // 3: course.CoursePageDto.rows:type_name -> course.CourseDto
	0,  // 4: course.CourseDtoList.rows:type_name -> course.CourseDto
	4,  // 5: course.CourseCategoryDtoList.rows:type_name -> course.CourseCategoryDto
	6,  // 6: course.CategoryPageDto.rows:type_name -> course.CategoryDto
	6,  // 7: course.CategoryDtoList.rows:type_name -> course.CategoryDto
	9,  // 8: course.ChapterDtoList.rows:type_name -> course.ChapterDto
	9,  // 9: course.ChapterPageDto.rows:type_name -> course.ChapterDto
	12, // 10: course.SectionPageDto.rows:type_name -> course.SectionDto
	14, // 11: course.TeacherPageDto.rows:type_name -> course.TeacherDto
	14, // 12: course.TeacherDtoList.rows:type_name -> course.TeacherDto
	17, // 13: course.CourseFileDtoList.rows:type_name -> course.CourseFileDto
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_course_course_srv_proto_dto_course_proto_init() }
func file_course_course_srv_proto_dto_course_proto_init() {
	if File_course_course_srv_proto_dto_course_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_course_course_srv_proto_dto_course_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoursePageDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseDtoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseContentDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseCategoryDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseCategoryDtoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryPageDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryDtoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChapterDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChapterDtoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChapterPageDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectionDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectionPageDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherPageDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherDtoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseFileDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseFileDtoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_course_srv_proto_dto_course_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_course_course_srv_proto_dto_course_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_course_course_srv_proto_dto_course_proto_goTypes,
		DependencyIndexes: file_course_course_srv_proto_dto_course_proto_depIdxs,
		MessageInfos:      file_course_course_srv_proto_dto_course_proto_msgTypes,
	}.Build()
	File_course_course_srv_proto_dto_course_proto = out.File
	file_course_course_srv_proto_dto_course_proto_rawDesc = nil
	file_course_course_srv_proto_dto_course_proto_goTypes = nil
	file_course_course_srv_proto_dto_course_proto_depIdxs = nil
}
